	buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:1.0.1'
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
    }
}

apply plugin: 'war'
apply plugin: 'org.hidetake.ssh'
apply plugin: 'groovy'
apply plugin: 'tomcat'
apply plugin: 'tomcat-base'

String spring_version = "4.0.5.RELEASE@jar" ; 
String hibernate_version = "4.2.6.Final@jar" ; 

configurations {
    moreLibs
}

repositories {
    flatDir { dirs "lib" }
    mavenCentral()
}

List spring = ["org.springframework:spring-context:"+spring_version,
		"org.springframework:spring-beans:"+spring_version,
		"org.springframework:spring-core:"+spring_version,
		"org.springframework:spring-aop:"+spring_version,
		"org.springframework:spring-expression:"+spring_version,
		"org.springframework:spring-jdbc:"+spring_version,
		"org.springframework:spring-tx:"+spring_version,
                'org.springframework:spring-context-support:'+spring_version,
		"org.springframework:spring-web:"+spring_version,
		"org.springframework:spring-webmvc:"+spring_version,
                "org.springframework:spring-jms:"+spring_version,
		"org.springframework:spring-orm:"+spring_version] 

List hibernate_api = ["org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final@jar"] 

List hibernate = [
    "org.jboss.spec.javax.transaction:jboss-transaction-api_1.1_spec:1.0.1.Final@jar",
    "org.hibernate.common:hibernate-commons-annotations:4.0.1.Final@jar",
    "org.javassist:javassist:3.16.1-GA",
    "org.hibernate:hibernate-entitymanager:"+hibernate_version,
    "org.hibernate:hibernate-core:"+hibernate_version
]

dependencies {
    compile hibernate_api
    compile hibernate
    compile spring 
    compile 'org.json:json:20140107'
    compile 'org.slf4j:slf4j-api:1.7.2'  
    compile 'com.maxmind.geoip:geoip-api:1.2.10'
    compile 'log4j:apache-log4j-extras:1.2.17'
    compile 'commons-codec:commons-codec:1.9'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'commons-httpclient:commons-httpclient:3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-pool:commons-pool:1.6'
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'log4j:log4j:1.2.17'
    compile 'com.sun.mail:javax.mail:1.5.2'
    compile 'com.sun.mail:smtp:1.5.2'
    compile 'org.apache.velocity:velocity:1.7'
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'aopalliance:aopalliance:1.0'
    compile 'dom4j:dom4j:1.6.1'
    compile 'org.jboss.logging:jboss-logging:3.1.4.GA'
    compile 'antlr:antlr:2.7.7'
    compile 'commons-logging:commons-logging:1.2'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'org.apache.activemq:activemq-core:5.7.0'
    compile 'org.apache.xbean:xbean-spring:3.16'

    
    providedCompile 'javax.servlet:servlet-api:2.5'
    
    runtime 'javax.servlet:jstl:1.1.2'
    runtime "postgresql:postgresql:9.3-1101.jdbc41@jar"
}

sourceCompatibility = 1.7

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        
        resources  {
            srcDir 'src/java'
        }
    }
}

war {   
    webInf { from 'web/WEB-INF/' }
}

remotes {
    webServer {
        host = '46.182.31.101'
        user = 'root'
    }
}

ssh.settings {
    identity = file("${System.properties['user.home']}/.ssh/gradle/id_rsa")
    knownHosts = allowAnyHosts    // Disable host key verification
}


task deploy() << {
    description = 'Deploys an application to the server.'
    
    ssh.run {
	    settings {
            pty = true
        }
        session(remotes.webServer) {

	        put war.archivePath, '/root/'
	        
	        execute 'cp /opt/api.promobox.ee/WEB-INF/cfg/production.properties .'
	        
	        execute 'cp /opt/api.promobox.ee/WEB-INF/classes/log4j.xml .'
	        
	        execute 'rm -rf /opt/api.promobox.ee/'
	        
	        execute 'unzip ' + war.archiveName + ' -d /opt/api.promobox.ee/'
	        
	        execute 'mv production.properties /opt/api.promobox.ee/WEB-INF/cfg/production.properties'
	        
	        execute 'mv log4j.xml /opt/api.promobox.ee/WEB-INF/classes/log4j.xml'
	
	        execute 'sudo service tomcat7 restart'
        }
    }
}


task deploy_static() << {
    description = 'Deploys an static to the server.'
  
    ssh.run {
        session(remotes.webServer) {

	        put "../PromoboxFrontend/public/" , '.'
	        execute 'cp -r public/* /opt/promobox.ee/'
	        execute 'rm -rf public/'
	   	}
    }
}